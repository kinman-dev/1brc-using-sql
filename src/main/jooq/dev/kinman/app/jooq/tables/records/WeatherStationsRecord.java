/*
 * This file is generated by jOOQ.
 */
package dev.kinman.app.jooq.tables.records;


import dev.kinman.app.jooq.tables.WeatherStations;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WeatherStationsRecord extends TableRecordImpl<WeatherStationsRecord> implements Record2<String, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.weather_stations.station_name</code>.
     */
    public void setStationName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.weather_stations.station_name</code>.
     */
    public String getStationName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.weather_stations.measurement</code>.
     */
    public void setMeasurement(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.weather_stations.measurement</code>.
     */
    public Double getMeasurement() {
        return (Double) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Double> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Double> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return WeatherStations.WEATHER_STATIONS.STATION_NAME;
    }

    @Override
    public Field<Double> field2() {
        return WeatherStations.WEATHER_STATIONS.MEASUREMENT;
    }

    @Override
    public String component1() {
        return getStationName();
    }

    @Override
    public Double component2() {
        return getMeasurement();
    }

    @Override
    public String value1() {
        return getStationName();
    }

    @Override
    public Double value2() {
        return getMeasurement();
    }

    @Override
    public WeatherStationsRecord value1(String value) {
        setStationName(value);
        return this;
    }

    @Override
    public WeatherStationsRecord value2(Double value) {
        setMeasurement(value);
        return this;
    }

    @Override
    public WeatherStationsRecord values(String value1, Double value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WeatherStationsRecord
     */
    public WeatherStationsRecord() {
        super(WeatherStations.WEATHER_STATIONS);
    }

    /**
     * Create a detached, initialised WeatherStationsRecord
     */
    public WeatherStationsRecord(String stationName, Double measurement) {
        super(WeatherStations.WEATHER_STATIONS);

        setStationName(stationName);
        setMeasurement(measurement);
        resetChangedOnNotNull();
    }
}
